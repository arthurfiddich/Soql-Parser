grammar Soql
  rule query
    select_clause from_clause where_clause? group_by_clause? having_clause? order_by_clause? limit_clause? offset_clause?
  end

  rule select_clause
    select space field_list
  end

  rule from_clause
    space from space unqualified_name
  end

  rule where_clause
    space where space condition
  end

  rule group_by_clause
    group_by_rollup_clause / group_by_cube_clause / group_by_plain_clause
  end

  rule having_clause
    space having space having_condition
  end

  rule order_by_clause
    space order_by space field_order_by_list
  end

  rule limit_clause
    space limit space positive_integer_literal
  end

  rule offset_clause
    space offset space positive_integer_literal
  end

  rule condition
    logical_condition3 / simple_condition
  end

  rule having_condition
    having_condition3
  end

  rule simple_condition
    field_condition / set_condition
  end

  rule logical_condition3
    logical_or_condition / logical_condition2
  end

  rule having_condition3
    having_or_condition / having_condition2
  end

  rule logical_condition2
    logical_and_condition / logical_condition1
  end

  rule having_condition2
    having_and_condition / having_condition1
  end

  rule logical_condition1
    logical_not_condition / logical_condition0
  end

  rule having_condition1
    having_not_condition / having_condition0
  end

  rule logical_condition0
    parenthesized_condition / simple_condition
  end

  rule having_condition0
    parenthesized_having_condition / having_field_condition
  end

  rule parenthesized_condition
    '(' space? condition space? ')'
  end

  rule parenthesized_having_condition
    '(' space? having_condition space? ')'
  end

  rule logical_or_condition
    logical_condition2 space or space logical_condition3
  end

  rule having_or_condition
    having_condition2 space or space having_condition3
  end

  rule logical_and_condition
    logical_condition1 space and space logical_condition2
  end

  rule having_and_condition
    having_condition1 space and space having_condition2
  end

  rule logical_not_condition
    'not' space logical_condition0
  end

  rule having_not_condition
    'not' space having_condition0
  end

  rule field_condition
    name space? field_operator space? literal
  end

  rule having_field_condition
    aggregate_expression space? having_operator space? literal
  end

  rule set_condition
    name space set_operator space? set_values
  end

  rule field_operator
    '=' / '!=' / '<>' / '<=' / '<' / '>=' / '>' / like
  end

  rule having_operator
    '=' / '!=' / '<>' / '<=' / '<' / '>=' / '>'
  end

  rule set_operator
    in / not_in / includes / excludes
  end

  rule set_values
    subquery / '(' space? set_value_list space? ')'
  end

  rule set_value_list
    literal space? comma space? set_value_list / literal
  end

  rule group_by_plain_clause
    space group_by space field_group_by_list
  end

  rule group_by_rollup_clause
    space group_by_rollup space? '(' space? field_group_by_list space? ')'
  end

  rule group_by_cube_clause
    space group_by_cube space? '(' space? field_group_by_list space? ')'
  end

  rule field_list
    select_expression space? comma space? field_list / select_expression
  end

  rule field_group_by_list
    group_by_expression space? comma space? field_group_by_list / group_by_expression
  end

  rule field_order_by_list
    order_by_expression space? comma space? field_order_by_list / order_by_expression
  end

  rule select_expression
    subquery / aggregate_expression / date_expression / to_label_expression / name
  end

  rule to_label_expression
    'tolabel' space? '(' space? name space? ')'
  end

  rule group_by_expression
    date_expression / name
  end

  rule order_by_expression
    group_by_expression ordering? null_behavior?
  end

  rule ordering
    space asc_or_desc
  end

  rule asc_or_desc
    'asc' / 'desc'
  end

  rule null_behavior
    space 'nulls' space first_or_last
  end

  rule first_or_last
    'first' / 'last'
  end

  rule subquery
    "(" space? query space? ")"
  end

  rule aggregate_expression
    aggregate_function space? "(" space? name space? ")" / count "(" space? ")"
  end

  rule aggregate_function
    avg / count_distinct / count / min / max / sum
  end

  rule date_expression
    date_function space? "(" space? name space? ")"
  end

  rule date_function
    calendar_month / calendar_quarter / calendar_year /
    day_in_month / day_in_week / day_in_year / day_only /
    fiscal_month / fiscal_quarter / fiscal_year /
    hour_in_day / week_in_month / week_in_year
  end

  rule avg
    "avg"
  end

  rule count
    "count"
  end

  rule count_distinct
    "count_distinct"
  end

  rule min
    "min"
  end

  rule max
    "max"
  end

  rule sum
    "sum"
  end

  rule calendar_month
    "calendar_month"
  end

  rule calendar_quarter
    "calendar_quarter"
  end

  rule calendar_year
    "calendar_year"
  end

  rule day_in_month
    "day_in_month"
  end

  rule day_in_week
    "day_in_week"
  end

  rule day_in_year
    "day_in_year"
  end

  rule day_only
    "day_only"
  end

  rule fiscal_month
    "fiscal_month"
  end

  rule fiscal_quarter
    "fiscal_quarter"
  end

  rule fiscal_year
    "fiscal_year"
  end

  rule hour_in_day
    "hour_in_day"
  end

  rule week_in_month
    "week_in_month"
  end

  rule week_in_year
    "week_in_year"
  end

  rule date_formula_literal
    "yesterday"            / "today"                / "tomorrow"            /
    "last_week"            / "this_week"            / "next_week"           /
    "last_month"           / "this_month"           / "next_month"          /
    "last_quarter"         / "this_quarter"         / "next_quarter"        /
    "last_fiscal_quarter"  / "this_fiscal_quarter"  / "next_fiscal_quarter" /
    "last_year"            / "this_year"            / "next_year"           /
    "last_fiscal_year"     / "this_fiscal_year"     / "next_fiscal_year"    /
    "last_90_days"         / "next_90_days"         /
    last_n_days            / next_n_days            /
    last_n_quarters        / next_n_quarters        /
    last_n_fiscal_quarters / next_n_fiscal_quarters /
    last_n_years           / next_n_years           /
    last_n_fiscal_years    / next_n_fiscal_years
  end

  rule last_n_days
    "last_n_days" space? ":" space? positive_integer_literal
  end

  rule next_n_days
    "next_n_days" space? ":" space? positive_integer_literal
  end

  rule last_n_quarters
    "last_n_quarters" space? ":" space? positive_integer_literal
  end

  rule next_n_quarters
    "next_n_quarters" space? ":" space? positive_integer_literal
  end

  rule last_n_fiscal_quarters
    "last_n_fiscal_quarters" space? ":" space? positive_integer_literal
  end

  rule next_n_fiscal_quarters
    "next_n_fiscal_quarters" space? ":" space? positive_integer_literal
  end

  rule last_n_years
    "last_n_years" space? ":" space? positive_integer_literal
  end

  rule next_n_years
    "next_n_years" space? ":" space? positive_integer_literal
  end

  rule last_n_fiscal_years
    "last_n_fiscal_years" space? ":" space? positive_integer_literal
  end

  rule next_n_fiscal_years
    "next_n_fiscal_years" space? ":" space? positive_integer_literal
  end

  rule select
    "select"
  end

  rule from
    "from"
  end

  rule where
    "where"
  end

  rule limit
    "limit"
  end

  rule having
    "having"
  end

  rule offset
    "offset"
  end

  rule order_by
    "order" space by
  end

  rule group_by
    "group" space by
  end

  rule group_by_rollup
    group_by space "rollup"
  end

  rule group_by_cube
    group_by space "cube"
  end

  rule includes
    "includes"
  end

  rule excludes
    "excludes"
  end

  rule like
    "like"
  end

  rule in
    'in'
  end

  rule not_in
    'not' space in
  end

  rule by
    "by"
  end

  rule or
    "or"
  end

  rule and
    "and"
  end

  rule space
    [\s]+
  end

  rule comma
    ","
  end

  rule name
    qualified_name / unqualified_name
  end

  rule qualified_name
    unqualified_name '.' unqualified_name
  end

  rule unqualified_name
    [a-zA-Z] [_a-zA-Z0-9]*
  end

  rule integer_literal
    ('+' / '-')? [0-9]+ <IntegerLiteral>
  end

  rule positive_integer_literal
    [0-9]+ <IntegerLiteral>
  end

  rule date_literal
    year '-' month '-' day
  end

  rule datetime_literal
    date_literal [ t] hour ':' minute ':' second timezone?
  end

  rule year
    [0-9] [0-9] [0-9] [0-9]
  end

  rule month
    "0" [0-9] / "1" [0-2]
  end

  rule day
    [0-2] [0-9] / "3" [01]
  end

  rule hour
    [01] [0-9] / "2" [0-3]
  end

  rule minute
    [0-5] [0-9]
  end

  rule second
    [0-5] [0-9] ( "." positive_integer_literal )?
  end

  rule timezone
    'z' / [-+] tzhour ( ':' minute )?
  end

  rule tzhour
    hour / [0-9]
  end

  rule string_literal
    "'" string_value "'" <StringLiteral>
  end

  rule string_value
    (!"'" . / "\\'")*
  end

  rule true_literal
    'true' !([_a-zA-Z] .) <TrueLiteral>
  end

  rule false_literal
    'false' !([_a-zA-Z] .) <FalseLiteral>
  end

  rule boolean_literal
    true_literal / false_literal
  end

  rule null_literal
    'null' !([_a-zA-Z] .) <NullLiteral>
  end

  rule literal
    date_formula_literal / datetime_literal / date_literal / integer_literal / string_literal / boolean_literal / null_literal
  end
end
